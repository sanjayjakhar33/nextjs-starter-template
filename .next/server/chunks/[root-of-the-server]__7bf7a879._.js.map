{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/seo/audit/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport OpenAI from 'openai'\n\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n})\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { url } = await request.json()\n\n    if (!url) {\n      return NextResponse.json({ error: 'URL is required' }, { status: 400 })\n    }\n\n    // Validate URL format\n    try {\n      new URL(url)\n    } catch {\n      return NextResponse.json({ error: 'Invalid URL format' }, { status: 400 })\n    }\n\n    // In a real implementation, you would:\n    // 1. Crawl the website\n    // 2. Analyze technical SEO factors\n    // 3. Check Core Web Vitals\n    // 4. Analyze content quality\n    // 5. Use OpenAI to generate insights\n\n    // For now, we'll use OpenAI to generate SEO recommendations based on the URL\n    const completion = await openai.chat.completions.create({\n      model: \"gpt-4\",\n      messages: [\n        {\n          role: \"system\",\n          content: \"You are an expert SEO analyst. Analyze the given website URL and provide SEO recommendations in JSON format.\"\n        },\n        {\n          role: \"user\",\n          content: `Analyze this website for SEO: ${url}. Provide a comprehensive SEO audit with scores, issues, and recommendations.`\n        }\n      ],\n      temperature: 0.7,\n      max_tokens: 2000,\n    })\n\n    const aiAnalysis = completion.choices[0]?.message?.content\n\n    // Mock audit results with AI-enhanced recommendations\n    const auditResults = {\n      overallScore: Math.floor(Math.random() * 30) + 70, // 70-100\n      url: url,\n      timestamp: new Date().toISOString(),\n      categories: {\n        technical: {\n          score: Math.floor(Math.random() * 20) + 80,\n          issues: [\n            { type: 'success', title: 'HTTPS Enabled', description: 'Website uses secure HTTPS protocol' },\n            { type: 'success', title: 'Mobile Friendly', description: 'Page is optimized for mobile devices' },\n            { type: 'warning', title: 'Page Speed', description: 'Page loads in 3.2s, could be faster' },\n            { type: Math.random() > 0.5 ? 'error' : 'warning', title: 'XML Sitemap', description: 'XML sitemap status needs verification' }\n          ]\n        },\n        content: {\n          score: Math.floor(Math.random() * 25) + 75,\n          issues: [\n            { type: 'success', title: 'Title Tags', description: 'All pages have unique title tags' },\n            { type: 'success', title: 'Meta Descriptions', description: 'Meta descriptions are present and optimized' },\n            { type: 'warning', title: 'Header Structure', description: 'Some pages missing H1 tags' },\n            { type: 'warning', title: 'Content Length', description: 'Some pages have thin content' }\n          ]\n        },\n        performance: {\n          score: Math.floor(Math.random() * 30) + 70,\n          metrics: {\n            fcp: Math.round((Math.random() * 2 + 1) * 10) / 10,\n            lcp: Math.round((Math.random() * 3 + 2) * 10) / 10,\n            cls: Math.round(Math.random() * 0.1 * 100) / 100,\n            fid: Math.floor(Math.random() * 50) + 10\n          }\n        },\n        accessibility: {\n          score: Math.floor(Math.random() * 15) + 85,\n          issues: [\n            { type: 'success', title: 'Alt Text', description: 'Images have descriptive alt text' },\n            { type: 'success', title: 'Color Contrast', description: 'Text has sufficient color contrast' },\n            { type: 'warning', title: 'Focus Indicators', description: 'Some interactive elements lack focus indicators' }\n          ]\n        }\n      },\n      recommendations: [\n        {\n          priority: 'high',\n          title: 'Optimize Core Web Vitals',\n          description: 'Improve Largest Contentful Paint (LCP) by optimizing images and server response time',\n          impact: 'High SEO impact'\n        },\n        {\n          priority: 'medium',\n          title: 'Enhance Content Quality',\n          description: 'Add more comprehensive content to thin pages and improve keyword targeting',\n          impact: 'Medium SEO impact'\n        },\n        {\n          priority: 'low',\n          title: 'Improve Header Structure',\n          description: 'Ensure all pages have proper H1-H6 heading hierarchy',\n          impact: 'Low SEO impact'\n        }\n      ],\n      aiInsights: aiAnalysis || 'AI analysis completed successfully'\n    }\n\n    return NextResponse.json(auditResults)\n\n  } catch (error) {\n    console.error('SEO Audit API Error:', error)\n    return NextResponse.json(\n      { error: 'Failed to perform SEO audit' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}